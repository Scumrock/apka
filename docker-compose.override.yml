version: "3.4"
services:
  postgres:
    command: postgres -c 'max_connections=500' -c 'idle_in_transaction_session_timeout=1800000'
    ports:
      - '5432:5432'
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PG_TRUST_LOCALNET=true
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
      - 'TZ=Europe/Moscow'
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 45s
      timeout: 10s
      retries: 10
      start_period: 20s
    networks:
      backend: { aliases: [ postgres.backend ] }

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    networks:
      backend: { aliases: [ minio.backend ] }

  app:
    depends_on:
      - postgres
      - minio
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_MINIO_ACCESSKEY=${MINIO_ACCESS_KEY}
      - SPRING_MINIO_SECRETKEY=${MINIO_SECRET_KEY}
      - APPLICATION_MIME_TYPES_FILTER_ALLOWED=${EXTENSIONS_ALLOWED_BY_STORAGE}
    ports:
      - '8080:8080'
      - '5050:5050'
    volumes:
      - app-logs:/usr/share/app/logs
    healthcheck:
      test: curl -sS http://localhost:8080/management/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      backend: { aliases: [ app.backend ] }

networks:
  backend:
    driver: bridge

volumes:
  postgres-db-data:
  minio-data:
  app-logs:
